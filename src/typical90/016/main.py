#!/usr/bin/env python3
import sys


def solve(N: int, A: int, B: int, C: int):
    maxCount = min(N // min(A, B, C), 10000)
    ret = maxCount
    
    for a in range(maxCount):
        if N < a * A: continue
        for b in range(maxCount - a):
            tmpSum = a * A + b * B
            if N < tmpSum: continue
            if (N - tmpSum) % C == 0:
                c = (N - tmpSum) // C
                ret = min((a + b + c), ret)
    print(ret)
    return


# Generated by 2.3.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = int(next(tokens))  # type: int
    B = int(next(tokens))  # type: int
    C = int(next(tokens))  # type: int
    solve(N, A, B, C)

if __name__ == '__main__':
    main()
