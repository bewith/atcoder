#!/usr/bin/env python3
import sys

def solve(H: int, W: int, A):
    points = [[0 for _ in range(W)] for _ in range(H)]

    for i in range(H-1, -1, -1):
        for j in range(W-1, -1, -1):
            A[i][j] = 1 if A[i][j] == "+" else -1
            if ((i == (H - 1)) and (j == (W - 1))):
                continue
            elif i == (H - 1):
                c = 1 if (i + j) % 2 == 0 else -1
                points[i][j] = points[i][j + 1] + A[i][j + 1] * c
                continue
            elif j == (W - 1):
                c = 1 if (i + j) % 2 == 0 else -1
                points[i][j] = points[i + 1][j] + A[i + 1][j] * c
                continue

            if (i + j) % 2 == 0:
                points[i][j] = max(points[i + 1][j] + A[i + 1][j], points[i][j + 1] + A[i][j + 1])
            else:
                points[i][j] = min(points[i + 1][j] - A[i + 1][j], points[i][j + 1] - A[i][j + 1])

    # for p in points:
    #     print(p)

    if points[0][0] > 0:
        print("Takahashi")
    elif points[0][0] < 0:
        print("Aoki")
    else:
        print("Draw")
    return

def moveFromRight(A, points, i, j):
    points[i][j] = points[i][j + 1]
    points[i][j] += A[i][j + 1]

def moveFromBottom(A, points, i, j):
    points[i][j] = points[i + 1][j]
    points[i][j] += A[i + 1][j]


# Generated by 2.3.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    H = int(next(tokens))
    W = int(next(tokens))

    A = []
    for _ in range(H):
        A.append(list(next(tokens)))

    solve(H, W, A)

if __name__ == '__main__':
    main()
